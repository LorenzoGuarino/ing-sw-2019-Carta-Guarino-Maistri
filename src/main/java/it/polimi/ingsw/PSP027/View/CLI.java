package it.polimi.ingsw.PSP027.View;

import it.polimi.ingsw.PSP027.Model.Game.GodCard;
import it.polimi.ingsw.PSP027.Network.Client.Client;
import it.polimi.ingsw.PSP027.Network.Client.ClientObserver;
import it.polimi.ingsw.PSP027.Network.Client.ServerObserver;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import java.util.*;
import java.util.concurrent.TimeUnit;

/**
 * @author Elisa Maistri
 */

public class CLI implements Runnable, ClientObserver {

    private Client client = null;
    private boolean bRun = false;
    private String cmdLine = "";
    private int requiredgods = 0;
    private List<String> gods = null;
    private boolean abortUserInput = false;
    private List<String> players = null;
    private Node nodeboard;
    private String[] cellsToPrint = new String[25];
    private Map<String, String> NicknameColorMap = new HashMap<String, String>(); //maps the nickname to its assigned color for its workers on the board

    /* *********************************************************************************************************
     * ********************************* UTILITY STRINGS FOR CLI RENDERING *********************************** *
     * *********************************************************************************************************/

    public static final String SANTORINI =
            "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m░\u001B[38;5;68;48;5;25m▒\u001B[38;5;32;48;5;60m▓\u001B[38;5;204;48;5;233m░\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;233m░\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;17m░\u001B[38;5;27;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;146;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;235m░\u001B[38;5;68;48;5;25m░\u001B[38;5;68;48;5;25m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m░\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m░\u001B[38;5;68;48;5;25m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;57;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;56;48;5;25m▒\u001B[38;5;165;48;5;60m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;232m░\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;26;48;5;61m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;232m░\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;88;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;47;48;5;25m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;204;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;54;48;5;20m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;204;48;5;233m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;234m░\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;99;48;5;24m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;88;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;61;48;5;24m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;62;48;5;61m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;27;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;56;48;5;237m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;4;48;5;61m░\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;196;48;5;60m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;204;48;5;17m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;84;48;5;61m░\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;88;48;5;4m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;25m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;26;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;186;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m░\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;67m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;67m▓\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;179;48;5;62m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;88;48;5;233m░\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;61m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;25;48;5;61m░\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;61m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;235m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;26;48;5;62m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;163;48;5;68m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;175;48;5;236m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[38;5;81;48;5;67m▓\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;204;48;5;237m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;232m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;4m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;98;48;5;67m▓\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;204;48;5;233m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;238m▓\u001B[38;5;68;48;5;68m░\u001B[38;5;32;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;25;48;5;61m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;167;48;5;233m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;32;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;55;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;67;48;5;61m▓\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;25;48;5;61m░\u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;68m▒\u001B[38;5;69;48;5;68m▒\u001B[38;5;1;48;5;16m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;62;48;5;31m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;45;48;5;244m▓\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;74;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;16m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;75;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;32;48;5;104m▓\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m▒\u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;5;48;5;6m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;237m▒\u001B[38;5;74;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;31;48;5;67m░\u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;135;48;5;51m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m▒\u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;16m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;68;48;5;68m░\u001B[38;5;74;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;199;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;77;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;125;48;5;60m▓\u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;32;48;5;68m▒\u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;69m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;39;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;45;48;5;105m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;16m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;74;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;92;48;5;61m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;68m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;111;48;5;69m░\u001B[38;5;111;48;5;105m░\u001B[38;5;111;48;5;105m░\u001B[38;5;111;48;5;105m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;69m░\u001B[38;5;69;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;68m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;105m░\u001B[38;5;68;48;5;69m░\u001B[38;5;68;48;5;69m░\u001B[38;5;69;48;5;69m░\u001B[38;5;204;48;5;233m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;198;48;5;238m▓\u001B[38;5;92;48;5;238m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;204;48;5;233m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;68m░\u001B[38;5;68;48;5;68m░\u001B[38;5;204;48;5;234m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;111;48;5;69m░\u001B[38;5;69;48;5;69m░\u001B[38;5;69;48;5;69m░\u001B[38;5;69;48;5;69m░\u001B[38;5;99;48;5;51m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;168;48;5;238m▒\u001B[38;5;197;48;5;238m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;234m▒\u001B[38;5;111;48;5;69m░\u001B[38;5;62;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;167;48;5;234m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;45;48;5;104m▒\u001B[38;5;204;48;5;233m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;88;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[0m";

    //better the one above
    public static final String SANTORINI_otheroption =
            "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;33;48;5;60m▓\u001B[38;5;195;48;5;231m \u001B[38;5;110;48;5;153m░\u001B[38;5;27;48;5;61m▒\u001B[38;5;27;48;5;25m▒\u001B[38;5;26;48;5;25m░\u001B[38;5;21;48;5;4m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;195;48;5;231m \u001B[38;5;32;48;5;153m░\u001B[38;5;27;48;5;68m▒\u001B[38;5;26;48;5;68m▒\u001B[38;5;27;48;5;67m▒\u001B[38;5;204;48;5;233m \u001B[38;5;125;48;5;17m▒\u001B[38;5;26;48;5;68m▒\u001B[38;5;33;48;5;75m░\u001B[38;5;26;48;5;67m▒\u001B[38;5;204;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;232m░\u001B[38;5;45;48;5;231m \u001B[38;5;38;48;5;195m \u001B[38;5;195;48;5;231m \u001B[38;5;38;48;5;237m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;26;48;5;24m▒\u001B[38;5;26;48;5;68m▒\u001B[38;5;27;48;5;24m▒\u001B[38;5;68;48;5;60m▓\u001B[38;5;68;48;5;24m░\u001B[38;5;27;48;5;25m▒\u001B[38;5;204;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;67;48;5;146m▒\u001B[38;5;27;48;5;68m▒\u001B[38;5;26;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;239m▒\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;25m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;33;48;5;25m▒\u001B[38;5;26;48;5;75m░\u001B[38;5;110;48;5;74m░\u001B[38;5;204;48;5;235m░\u001B[38;5;33;48;5;153m \u001B[38;5;110;48;5;68m▒\u001B[38;5;26;48;5;32m░\u001B[38;5;26;48;5;68m▒\u001B[38;5;26;48;5;25m░\u001B[38;5;68;48;5;25m░\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;110;48;5;110m▒\u001B[38;5;27;48;5;61m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;17m░\u001B[38;5;68;48;5;23m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m▒\u001B[38;5;26;48;5;25m▒\u001B[38;5;27;48;5;25m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;68m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;111;48;5;17m \u001B[38;5;26;48;5;68m░\u001B[38;5;110;48;5;61m▒\u001B[38;5;19;48;5;17m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;17m░\u001B[38;5;26;48;5;25m▒\u001B[38;5;26;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;4m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;111;48;5;17m \u001B[38;5;27;48;5;25m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;16;48;5;16m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;24m░\u001B[38;5;33;48;5;233m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;24m░\u001B[38;5;69;48;5;17m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;167;48;5;234m▒\u001B[38;5;38;48;5;231m \u001B[38;5;26;48;5;74m▒\u001B[38;5;27;48;5;68m▒\u001B[38;5;26;48;5;68m▒\u001B[38;5;26;48;5;68m░\u001B[38;5;204;48;5;232m░\u001B[38;5;27;48;5;25m▒\u001B[38;5;26;48;5;75m░\u001B[38;5;26;48;5;69m░\u001B[38;5;26;48;5;68m░\u001B[38;5;126;48;5;17m▒\u001B[38;5;26;48;5;68m░\u001B[38;5;26;48;5;68m▒\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;24m▒\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;17m░\u001B[38;5;39;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;32;48;5;189m▒\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;68m▒\u001B[38;5;26;48;5;68m▒\u001B[38;5;26;48;5;26m▒\u001B[38;5;26;48;5;25m▒\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;25m░\u001B[38;5;26;48;5;25m░\u001B[38;5;68;48;5;23m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;236m▒\u001B[38;5;26;48;5;233m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;237m▓\u001B[38;5;26;48;5;23m░\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;4m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;68m▒\u001B[38;5;26;48;5;68m▒\u001B[38;5;26;48;5;68m░\u001B[38;5;27;48;5;17m \u001B[38;5;26;48;5;26m░\u001B[38;5;27;48;5;25m░\u001B[38;5;33;48;5;189m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;237m▒\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;111;48;5;17m \u001B[38;5;26;48;5;24m \u001B[38;5;75;48;5;234m \u001B[38;5;69;48;5;234m▒\u001B[38;5;26;48;5;234m▒\u001B[38;5;111;48;5;4m░\u001B[38;5;111;48;5;24m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;27;48;5;4m \u001B[38;5;26;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;32;48;5;66m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;17m \u001B[38;5;26;48;5;237m▒\u001B[38;5;26;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;23m▒\u001B[38;5;1;48;5;16m \u001B[38;5;211;48;5;18m \u001B[38;5;26;48;5;110m▒\u001B[38;5;68;48;5;24m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;25m░\u001B[38;5;27;48;5;25m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m▒\u001B[38;5;27;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;60m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;4m░\u001B[38;5;68;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;4m░\u001B[38;5;111;48;5;4m \u001B[38;5;111;48;5;4m \u001B[38;5;27;48;5;24m░\u001B[38;5;17;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;60m▓\u001B[38;5;26;48;5;240m▓\u001B[38;5;68;48;5;255m▒\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;60m▓\u001B[38;5;111;48;5;17m░\u001B[38;5;111;48;5;234m \u001B[38;5;68;48;5;234m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;234m▒\u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;39;48;5;109m▓\u001B[38;5;111;48;5;4m░\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;32;48;5;252m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;68;48;5;235m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;17m \u001B[38;5;111;48;5;18m \u001B[38;5;25;48;5;252m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;33;48;5;249m▓\u001B[38;5;27;48;5;4m░\u001B[38;5;204;48;5;234m▓\u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;89;48;5;234m░\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;99;48;5;17m░\u001B[38;5;69;48;5;234m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;27;48;5;24m▒\u001B[38;5;27;48;5;25m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;249m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;68;48;5;25m░\u001B[38;5;27;48;5;4m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;232m \u001B[38;5;27;48;5;24m░\u001B[38;5;69;48;5;235m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;111;48;5;24m░\u001B[38;5;198;48;5;23m \u001B[38;5;27;48;5;24m░\u001B[38;5;69;48;5;240m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;238m▒\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;111;48;5;17m░\u001B[38;5;68;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;246m▓\u001B[38;5;111;48;5;4m░\u001B[38;5;111;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;32;48;5;233m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;26;48;5;24m \u001B[38;5;69;48;5;242m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m \u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;145m▓\u001B[38;5;27;48;5;24m \u001B[38;5;69;48;5;233m▒\u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;25;48;5;17m \u001B[38;5;27;48;5;25m░\u001B[38;5;26;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;24m░\u001B[38;5;27;48;5;25m░\u001B[38;5;111;48;5;17m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;27;48;5;25m░\u001B[38;5;69;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;232m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;68;48;5;60m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;60m▓\u001B[38;5;27;48;5;24m \u001B[38;5;204;48;5;17m \u001B[38;5;27;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;26;48;5;240m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;250m▓\u001B[38;5;69;48;5;17m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;69;48;5;232m \u001B[38;5;27;48;5;4m \u001B[38;5;111;48;5;17m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;4m░\u001B[38;5;27;48;5;24m░\u001B[38;5;38;48;5;255m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;251m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;232m \u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;33;48;5;250m▓\u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;17m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;197;48;5;234m░\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;17m \u001B[38;5;45;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;25m░\u001B[38;5;110;48;5;235m▒\u001B[38;5;211;48;5;235m░\u001B[38;5;26;48;5;24m░\u001B[38;5;26;48;5;102m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;235m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;110;48;5;236m▒\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;111;48;5;4m░\u001B[38;5;27;48;5;24m░\u001B[38;5;69;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;4m \u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;4m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;68;48;5;17m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;233m \u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;16m \u001B[38;5;16;48;5;16m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;234m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;33;48;5;235m▒\u001B[38;5;27;48;5;4m░\u001B[38;5;27;48;5;24m░\u001B[38;5;204;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;245m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;33;48;5;249m▓\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;4m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;109m▓\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;234m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;75;48;5;24m░\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;67;48;5;146m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;236m▒\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;4m░\u001B[38;5;26;48;5;24m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;232m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m \u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;16;48;5;16m▓\u001B[38;5;27;48;5;4m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m \u001B[38;5;26;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;17m░\u001B[38;5;25;48;5;252m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;234m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;38;48;5;250m▓\u001B[38;5;32;48;5;232m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;17m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;111;48;5;24m░\u001B[38;5;69;48;5;233m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;75;48;5;17m░\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;4m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;32;48;5;254m▒\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;4m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;32;48;5;251m▓\u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;17m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;4m░\u001B[38;5;26;48;5;25m \u001B[38;5;33;48;5;235m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;69;48;5;17m \u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;233m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;111;48;5;24m░\u001B[38;5;25;48;5;245m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;234m░\u001B[38;5;17;48;5;232m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;237m▒\u001B[38;5;27;48;5;24m░\u001B[38;5;69;48;5;103m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;4m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;235m░\u001B[38;5;27;48;5;24m░\u001B[38;5;68;48;5;235m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;111;48;5;234m░\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;16m \u001B[38;5;231;48;5;231m▓\u001B[38;5;45;48;5;231m \u001B[38;5;69;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;16;48;5;16m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;45;48;5;255m▓\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;145m▓\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;111;48;5;24m░\u001B[38;5;69;48;5;236m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;74;48;5;188m▓\u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;4m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;39;48;5;231m \u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;17m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;24m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;1;48;5;16m \u001B[38;5;163;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;33;48;5;146m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;31;48;5;231m \u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;24m░\u001B[38;5;68;48;5;235m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;239m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;17;48;5;232m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;235m▒\u001B[38;5;69;48;5;233m \u001B[38;5;195;48;5;231m \u001B[38;5;195;48;5;231m \u001B[38;5;68;48;5;234m▒\u001B[38;5;27;48;5;17m░\u001B[38;5;50;48;5;252m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;69;48;5;232m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m░\u001B[38;5;69;48;5;233m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;16m \u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;17;48;5;232m \u001B[38;5;27;48;5;24m░\u001B[38;5;69;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;4m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;4m \u001B[38;5;26;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;4m \u001B[38;5;27;48;5;24m \u001B[38;5;1;48;5;232m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;111;48;5;4m \u001B[38;5;26;48;5;25m \u001B[38;5;110;48;5;255m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;117;48;5;231m \u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;237m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;251m▓\u001B[38;5;111;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;253m▒\u001B[38;5;68;48;5;4m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;240m▓\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;39;48;5;246m▓\u001B[38;5;69;48;5;234m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;24m░\u001B[38;5;68;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;158;48;5;231m \u001B[38;5;68;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;24m░\u001B[38;5;67;48;5;240m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;234m░\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;236m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;111;48;5;4m \u001B[38;5;27;48;5;24m \u001B[38;5;31;48;5;253m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;236m▒\u001B[38;5;68;48;5;235m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;236m▒\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;111;48;5;4m░\u001B[38;5;26;48;5;24m░\u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;26;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;17m░\u001B[38;5;68;48;5;236m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;60m▓\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;17m \u001B[38;5;27;48;5;25m░\u001B[38;5;68;48;5;235m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;68;48;5;235m▒\u001B[38;5;27;48;5;4m░\u001B[38;5;26;48;5;17m \u001B[38;5;26;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;68;48;5;17m░\u001B[38;5;197;48;5;234m \u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;24m \u001B[38;5;111;48;5;18m \u001B[38;5;27;48;5;24m░\u001B[38;5;17;48;5;232m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;4m \u001B[38;5;111;48;5;233m \u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;25;48;5;152m▒\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;17m░\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;24m \u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;234m▒\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;60m▓\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;25m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;17m░\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;232m \u001B[38;5;26;48;5;17m░\u001B[38;5;69;48;5;17m░\u001B[38;5;27;48;5;17m \u001B[38;5;27;48;5;17m \u001B[38;5;27;48;5;24m \u001B[38;5;26;48;5;24m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;69;48;5;17m░\u001B[38;5;27;48;5;25m░\u001B[38;5;26;48;5;24m \u001B[38;5;111;48;5;17m░\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;4m \u001B[38;5;111;48;5;17m \u001B[38;5;27;48;5;234m░\u001B[38;5;69;48;5;233m░\u001B[38;5;27;48;5;17m░\u001B[38;5;26;48;5;25m░\u001B[38;5;68;48;5;62m▒\u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;26;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;233m░\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;195;48;5;231m \u001B[38;5;27;48;5;24m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;24m░\u001B[38;5;17;48;5;232m \u001B[38;5;26;48;5;152m▒\u001B[38;5;27;48;5;24m░\u001B[38;5;110;48;5;32m░\u001B[38;5;87;48;5;234m░\u001B[38;5;84;48;5;235m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;24m░\u001B[38;5;68;48;5;66m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;26;48;5;24m░\u001B[38;5;27;48;5;25m░\u001B[38;5;211;48;5;234m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;24m░\u001B[38;5;195;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;231;48;5;231m▓\u001B[38;5;27;48;5;4m░\u001B[38;5;27;48;5;25m░\u001B[38;5;1;48;5;16m \u001B[38;5;111;48;5;17m \u001B[38;5;26;48;5;24m░\u001B[38;5;26;48;5;24m \u001B[38;5;27;48;5;24m \u001B[38;5;27;48;5;17m \u001B[38;5;27;48;5;17m \u001B[38;5;26;48;5;24m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;25m░\u001B[38;5;69;48;5;233m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;174;48;5;234m▒\u001B[38;5;69;48;5;17m \u001B[38;5;26;48;5;24m░\u001B[38;5;111;48;5;17m \u001B[38;5;167;48;5;237m▒\u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;17m▒\u001B[38;5;27;48;5;25m░\u001B[38;5;68;48;5;17m░\u001B[38;5;31;48;5;231m \u001B[38;5;231;48;5;231m▓\u001B[38;5;32;48;5;255m \u001B[38;5;26;48;5;17m░\u001B[38;5;26;48;5;24m \u001B[38;5;220;48;5;17m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;69;48;5;17m \u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;26m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;75;48;5;24m \u001B[38;5;26;48;5;24m \u001B[38;5;26;48;5;23m░\u001B[38;5;111;48;5;17m░\u001B[38;5;111;48;5;17m░\u001B[38;5;26;48;5;24m░\u001B[38;5;27;48;5;25m░\u001B[38;5;131;48;5;238m▓\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;16m \u001B[38;5;111;48;5;17m \u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;25m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;24m░\u001B[38;5;27;48;5;25m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;26m▒\u001B[38;5;26;48;5;25m░\u001B[38;5;32;48;5;234m░\u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;233m \u001B[38;5;33;48;5;235m░\u001B[38;5;26;48;5;17m \u001B[38;5;204;48;5;232m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;125;48;5;233m░\u001B[38;5;69;48;5;17m \u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;24m░\u001B[38;5;27;48;5;23m▒\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;56;48;5;237m░\u001B[38;5;26;48;5;68m░\u001B[38;5;110;48;5;32m░\u001B[38;5;33;48;5;26m░\u001B[38;5;26;48;5;25m░\u001B[38;5;26;48;5;25m░\u001B[38;5;88;48;5;233m░\u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;232m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;204;48;5;232m░\u001B[38;5;111;48;5;17m \u001B[38;5;26;48;5;24m░\u001B[38;5;69;48;5;17m \u001B[38;5;1;48;5;232m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[38;5;1;48;5;16m \u001B[0m\n" +
                    "\u001B[0m";

    public static final String TRIANGLE = "\u25b9";

    // Reset
    public static final String RESET = "\033[0m";  // Text Reset

    // Regular Colors
    public static final String BLACK = "\033[0;30m";   // BLACK
    public static final String RED = "\033[0;31m";     // RED
    public static final String GREEN = "\033[0;32m";   // GREEN
    public static final String YELLOW = "\033[0;33m";  // YELLOW
    public static final String BLUE = "\033[0;34m";    // BLUE
    public static final String PURPLE = "\033[0;35m";  // PURPLE
    public static final String CYAN = "\033[0;36m";    // CYAN
    public static final String WHITE = "\033[0;37m";   // WHITE

    // Bold colored
    public static final String BLACK_BOLD = "\033[1;30m";  // BLACK
    public static final String RED_BOLD = "\033[1;31m";    // RED
    public static final String GREEN_BOLD = "\033[1;32m";  // GREEN
    public static final String YELLOW_BOLD = "\033[1;33m"; // YELLOW
    public static final String BLUE_BOLD = "\033[1;34m";   // BLUE
    public static final String PURPLE_BOLD = "\033[1;35m"; // PURPLE
    public static final String CYAN_BOLD = "\033[1;36m";   // CYAN
    public static final String WHITE_BOLD = "\033[1;37m";  // WHITE

    //italic
    public static final String ITALIC = "\033[3m";

    //bold
    public static final String BOLD = "\033[1m";

    //underline
    public static final String UNDERLINE = "\033[4m";

    // Underline colored
    public static final String BLACK_UNDERLINED = "\033[4;30m";  // BLACK
    public static final String RED_UNDERLINED = "\033[4;31m";    // RED
    public static final String GREEN_UNDERLINED = "\033[4;32m";  // GREEN
    public static final String YELLOW_UNDERLINED = "\033[4;33m"; // YELLOW
    public static final String BLUE_UNDERLINED = "\033[4;34m";   // BLUE
    public static final String PURPLE_UNDERLINED = "\033[4;35m"; // PURPLE
    public static final String CYAN_UNDERLINED = "\033[4;36m";   // CYAN
    public static final String WHITE_UNDERLINED = "\033[4;37m";  // WHITE

    // Background
    public static final String BLACK_BACKGROUND = "\033[40m";  // BLACK
    public static final String RED_BACKGROUND = "\033[41m";    // RED
    public static final String GREEN_BACKGROUND = "\033[42m";  // GREEN
    public static final String YELLOW_BACKGROUND = "\033[43m"; // YELLOW
    public static final String BLUE_BACKGROUND = "\033[44m";   // BLUE
    public static final String PURPLE_BACKGROUND = "\033[45m"; // PURPLE
    public static final String CYAN_BACKGROUND = "\033[46m";   // CYAN
    public static final String WHITE_BACKGROUND = "\033[47m";  // WHITE

    // High Intensity
    public static final String BLACK_BRIGHT = "\033[0;90m";  // BLACK
    public static final String RED_BRIGHT = "\033[0;91m";    // RED
    public static final String GREEN_BRIGHT = "\033[0;92m";  // GREEN
    public static final String YELLOW_BRIGHT = "\033[0;93m"; // YELLOW
    public static final String BLUE_BRIGHT = "\033[0;94m";   // BLUE
    public static final String PURPLE_BRIGHT = "\033[0;95m"; // PURPLE
    public static final String CYAN_BRIGHT = "\033[0;96m";   // CYAN
    public static final String WHITE_BRIGHT = "\033[0;97m";  // WHITE

    // Bold High Intensity
    public static final String BLACK_BOLD_BRIGHT = "\033[1;90m"; // BLACK
    public static final String RED_BOLD_BRIGHT = "\033[1;91m";   // RED
    public static final String GREEN_BOLD_BRIGHT = "\033[1;92m"; // GREEN
    public static final String YELLOW_BOLD_BRIGHT = "\033[1;93m";// YELLOW
    public static final String BLUE_BOLD_BRIGHT = "\033[1;94m";  // BLUE
    public static final String PURPLE_BOLD_BRIGHT = "\033[1;95m";// PURPLE
    public static final String CYAN_BOLD_BRIGHT = "\033[1;96m";  // CYAN
    public static final String WHITE_BOLD_BRIGHT = "\033[1;97m"; // WHITE

    // High Intensity backgrounds
    public static final String BLACK_BACKGROUND_BRIGHT = "\033[0;100m";// BLACK
    public static final String RED_BACKGROUND_BRIGHT = "\033[0;101m";// RED
    public static final String GREEN_BACKGROUND_BRIGHT = "\033[0;102m";// GREEN
    public static final String YELLOW_BACKGROUND_BRIGHT = "\033[0;103m";// YELLOW
    public static final String BLUE_BACKGROUND_BRIGHT = "\033[0;104m";// BLUE
    public static final String PURPLE_BACKGROUND_BRIGHT = "\033[0;105m"; // PURPLE
    public static final String CYAN_BACKGROUND_BRIGHT = "\033[0;106m";  // CYAN
    public static final String WHITE_BACKGROUND_BRIGHT = "\033[0;107m";   // WHITE

    public void ColoredPrintRGB(String txt, int fr, int fg, int fb, int br, int bg, int bb) {
        String forecolor = "\033[38;2;" + Integer.toString(fr) + ";" + Integer.toString(fg) + ";" + Integer.toString(fb);
        String background = "\033[48;2;" + Integer.toString(br) + ";" + Integer.toString(bg) + ";" + Integer.toString(bb);
        System.out.print(forecolor);
        System.out.print(background);
        System.out.print(txt);
        System.out.print(RESET);
    }

    public void ColoredPrintLnRGB(String txt, int fr, int fg, int fb, int br, int bg, int bb) {
        String forecolor = "\033[38;2;" + Integer.toString(fr) + ";" + Integer.toString(fg) + ";" + Integer.toString(fb);
        String background = "\033[48;2;" + Integer.toString(br) + ";" + Integer.toString(bg) + ";" + Integer.toString(bb);
        System.out.print(forecolor);
        System.out.print(background);
        System.out.println(txt);
        System.out.print(RESET);
    }

    public void ColoredPrint(String txt, String forecolor, String background) {
        System.out.print(forecolor);
        System.out.print(background);
        System.out.print(txt);
        System.out.print(RESET);
    }

    public void ColoredPrintLn(String txt, String forecolor, String background) {
        System.out.print(forecolor);
        System.out.print(background);
        System.out.println(txt);
        System.out.print(RESET);
    }

    public void clearScreen() {
        System.out.print("\033[H\033[2J");
        System.out.print("\033[2J");
        System.out.flush();
    }

    /* ************************************** COMMANDS ************************************* */

    private static String DISCONNECT_COMMAND = "disconnect";
    private static String BYE_COMMAND = "bye";
    private static String CONNECT_COMMAND = "connect";
    private static String REGISTER_COMMAND = "register";
    private static String DEREGISTER_COMMAND = "deregister";
    private static String SEARCHMATCH_COMMAND = "searchmatch";
    private static String CHOSENGODS_COMMAND = "chosengods";
    private static String CHOSENGOD_COMMAND = "chosengod";
    private static String CHOSENFIRSTPLAYER_COMMAND = "firstplayerchosen";
    private static String PLAY_COMMAND = "play";
    private static String WORKERSPOSITION_COMMAND = "workerspositionchosen";
    private static String CHOSENWORKER_COMMAND = "workerchosen";

    private static String DISCONNECT_COMMAND_LABEL = "  " + BLACK_BOLD + DISCONNECT_COMMAND + RESET + " (to disconnect from server)";
    private static String BYE_COMMAND_LABEL = "  " + BLACK_BOLD + BYE_COMMAND + RESET + " (to quit the game)";
    private static String CONNECT_COMMAND_LABEL = "  " + BLACK_BOLD + CONNECT_COMMAND + RESET + " ip:port (this will let you connect to Santorini server. Port is optional. If not specified the default value 2705 will be used)";
    private static String REGISTER_COMMAND_LABEL = "  " + BLACK_BOLD + REGISTER_COMMAND + " nickname" + RESET + "(to register yourself within Santorini game using given nickname)";
    private static String DEREGISTER_COMMAND_LABEL = "  " + BLACK_BOLD + DEREGISTER_COMMAND + RESET + " (to deregister yourself from Santorini game)";
    private static String PLAY_COMMAND_LABEL = "  " + BLACK_BOLD + PLAY_COMMAND + RESET + " (to start a new match)";
    private static String AVAILABLE_COMMANDS_LABEL = "Available commands:";
    private static String CONNECTED_LABEL = ITALIC + "Successfully connected to server." + RESET + "\n";
    private static String DISCONNECTED_LABEL = "You are not actually connected to server.\n";
    private static String QUIT_GAME_LABEL = "Thank you for having played" + BOLD + "Santorini" + RESET + "game.\n\nSee you soon!";
    private static String CHOOSE_MATCH_TYPE_LABEL = "\nPlease, enter the number of opponent players you wanna play with (choose between " + BOLD + "1" + RESET + " or " + BOLD + "2" + RESET + ")";
    private static String SEARCHING_MATCH_LABEL = ITALIC + "Searching match ... please wait ..." + RESET;


    /* ************************************************************************************************* */

    private enum CLIConnectionState {
        cli_undetermined,
        cli_disconnected,
        cli_connecting,
        cli_Connected,
        cli_disconnecting,
    }

    private enum CLIGameState {
        cli_Deregistered,
        cli_Registering,
        cli_Registered,
        cli_Deregistering,
        cli_ChoosingMatch,
        cli_ChoosingGods,
        cli_ChoosingGod,
        cli_ChoosingFirstPlayer,
        cli_ChoosingWorkersStartPosition,
        cli_ManagePlacingFirstWorker,
        cli_ManagePlacingSecondWorker,
        cli_ChooseWorkerToPlay,
        cli_ChoosingWorker,
        cli_WaitForSomethingToHappen
    }

    /**
     * class to manage the user input
     */

    private class Keyboardinput implements Runnable {

        private Scanner scanner = null;
        public boolean bRun = true;

        @Override
        public void run() {

            scanner = new Scanner(System.in);

            while (bRun) {
                cmdLine = scanner.nextLine();
            }
        }
    }

    private Keyboardinput kbinput = null;
    private CLIConnectionState connstate = CLIConnectionState.cli_undetermined;
    private CLIGameState gamestate = CLIGameState.cli_Deregistered;

    /**
     * Main method of the CLI which the user will run instantiating a new CLI
     *
     * @param args main arguments
     */

    public static void main(String[] args) {
        /* Instantiate a new CLI which will also receive events from
         * the server by implementing the ServerObserver interface */
        CLI cli = new CLI();
        cli.run();
    }

    /**
     * Method that checks if a command entered by the user is valid
     *
     * @param command command to check
     * @return true if it's a valid command, otherwise false
     */

    public boolean IsAValidCommand(String command) {

        if (command.length() > 0) {
            String[] str = command.split(" ");

            if (str[0].equals("connect"))
                return true;
            if (str[0].equals("disconnect"))
                return true;
            if (str[0].equals("bye"))
                return true;
            if (str[0].equals("register"))
                return true;
            if (str[0].equals("deregister"))
                return true;
        }

        return false;
    }

    /**
     * Method used when waiting for a user input
     */

    private void WaitForUserInput() {
        try {
            abortUserInput = false;
            cmdLine = "";
            while (cmdLine.isEmpty() && !abortUserInput)
                TimeUnit.MILLISECONDS.sleep(10);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    /**
     * Method that is launched when the CLI starts and handles the action to perform in regard to the command entered by
     * by the user in an infinite cycle
     */

    @Override
    public void run() {
        //HEADER OF THE GAME
        System.out.println(SANTORINI);
        System.out.println(BLUE_BOLD + ITALIC + "Welcome to Santorini Game !" + RESET);
        //used to print a colored line
        System.out.println(BLUE_UNDERLINED + "                                                                                                         " + RESET);


        client = new Client();
        client.addObserver(this);
        // start thread to manage connection in background
        bRun = true;
        Thread clientThread = new Thread(client);
        clientThread.start();

        kbinput = new Keyboardinput();
        Thread kbinputThread = new Thread(kbinput);
        kbinputThread.start();

        String[] chosenposition = new String[2];

        while (bRun) {
            switch (connstate) {

                case cli_disconnected: {
                    System.out.println("\n" + BLACK + BLUE_BACKGROUND + AVAILABLE_COMMANDS_LABEL + RESET);
                    System.out.println(TRIANGLE + CONNECT_COMMAND_LABEL);
                    System.out.println(TRIANGLE + BYE_COMMAND_LABEL);

                    WaitForUserInput();

                    String[] cmdlineParts = cmdLine.split(" ");
                    if (cmdlineParts[0].equals(CONNECT_COMMAND)) {
                        connstate = CLIConnectionState.cli_connecting;
                        if (cmdlineParts.length == 2)
                            client.Connect(cmdlineParts[1]);
                        else
                            OnInvalidCommandSyntax(CONNECT_COMMAND);
                    } else if (cmdlineParts[0].equals(BYE_COMMAND)) {
                        client.Disconnect();
                        bRun = false;
                    }
                }
                break;

                case cli_connecting:
                case cli_disconnecting: {
                    System.out.print(".");
                    try {
                        TimeUnit.MILLISECONDS.sleep(50);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
                break;

                case cli_Connected: {
                    switch (gamestate) {
                        case cli_Deregistered: {
                            ColoredPrint(AVAILABLE_COMMANDS_LABEL, BLACK, BLUE_BACKGROUND);
                            System.out.print("\n");
                            System.out.println(TRIANGLE + REGISTER_COMMAND_LABEL);
                            System.out.println(TRIANGLE + DISCONNECT_COMMAND_LABEL);
                            System.out.println(TRIANGLE + BYE_COMMAND_LABEL);
                            WaitForUserInput();
                        }
                        break;

                        case cli_Registering:
                        case cli_Deregistering: {
                            System.out.print(".");
                            try {
                                TimeUnit.MILLISECONDS.sleep(50);
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                        }
                        break;

                        case cli_Registered: {
                            System.out.println(BLACK + BLUE_BACKGROUND + AVAILABLE_COMMANDS_LABEL + RESET);
                            System.out.println(TRIANGLE + PLAY_COMMAND_LABEL);
                            System.out.println(TRIANGLE + DEREGISTER_COMMAND_LABEL);
                            System.out.println(TRIANGLE + DISCONNECT_COMMAND_LABEL);
                            System.out.println(TRIANGLE + BYE_COMMAND_LABEL);

                            WaitForUserInput();
                        }
                        break;

                        case cli_ChoosingMatch: {
                            System.out.println(CHOOSE_MATCH_TYPE_LABEL);
                            WaitForUserInput();
                            int players = Integer.parseInt(cmdLine);
                            if ((players >= 1) && (players <= 2)) {
                                // add local player to count as server search need to count all players...
                                players++;
                                System.out.println(SEARCHING_MATCH_LABEL);
                                // create an emulated command with proper syntax for
                                // processing entered command section
                                cmdLine = SEARCHMATCH_COMMAND + " " + Integer.toString(players);
                            }
                        }
                        break;

                        case cli_ChoosingGods: {
                            if (gods != null) {
                                clearScreen();
                                System.out.println("\n\nPlease choose " + BOLD + Integer.toString(requiredgods) + RESET + " gods among the listed ones:");

                                for (int i = 0; i < gods.size(); i++) {
                                    System.out.println(TRIANGLE + " " + gods.get(i));
                                }

                                System.out.println("\nEnter a comma separated list of gods");
                                System.out.println("For a description of a god's power, enter \"help god's name\"");
                                WaitForUserInput();

                                String[] helpcmd = cmdLine.split(" ");
                                if (helpcmd[0].equals("help")) {
                                    System.out.println("\n");

                                    if (helpcmd.length == 2) {
                                        switch (helpcmd[1]) {
                                            case GodCard.APOLLO:
                                                System.out.println(GodCard.APOLLO_D);
                                                break;
                                            case GodCard.ARTEMIS:
                                                System.out.println(GodCard.ARTEMIS_D);
                                                break;
                                            case GodCard.ATHENA:
                                                System.out.println(GodCard.ATHENA_D);
                                                break;
                                            case GodCard.ATLAS:
                                                System.out.println(GodCard.ATLAS_D);
                                                break;
                                            case GodCard.DEMETER:
                                                System.out.println(GodCard.DEMETER_D);
                                                break;
                                            case GodCard.HEPHAESTUS:
                                                System.out.println(GodCard.HEPHAESTUS_D);
                                                break;
                                            case GodCard.MINOTAUR:
                                                System.out.println(GodCard.MINOTAUR_D);
                                                break;
                                            case GodCard.PAN:
                                                System.out.println(GodCard.PAN_D);
                                                break;
                                            case GodCard.PROMETHEUS:
                                                System.out.println(GodCard.PROMETHEUS_D);
                                                break;
                                        }
                                        System.out.println("\n\n");
                                    }
                                } else {
                                    String[] chosengods = cmdLine.split(",");

                                    if (chosengods.length == requiredgods) {

                                        boolean bFound = false;

                                        for (String chosengod : chosengods) {
                                            chosengod = chosengod.trim();
                                            bFound = false;
                                            for (int i = 0; i < gods.size(); i++) {
                                                if (gods.get(i).equals(chosengod)) {
                                                    bFound = true;
                                                    break;
                                                }
                                            }
                                            if (bFound == false) {
                                                break;
                                            }

                                        }

                                        if (bFound == true) {
                                            // create an emulated command with proper syntax for
                                            // processing entered command section
                                            cmdLine = CHOSENGODS_COMMAND + " ";
                                            for (String chosengod : chosengods) {
                                                cmdLine += chosengod.trim() + " ";
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        break;

                        case cli_ChoosingGod: {
                            if (gods != null) {
                                clearScreen();
                                if (gods.size() > 1) {
                                    System.out.println("\nPlease choose your god from the listed ones:");
                                    for (int i = 0; i < gods.size(); i++) {
                                        System.out.println(TRIANGLE + " " + gods.get(i));
                                    }

                                    System.out.println("\nFor a description of a god's power, enter \"help god's name\"");
                                    WaitForUserInput();

                                    String[] helpcmd = cmdLine.split(" ");
                                    if (helpcmd[0].equals("help")) {
                                        if (helpcmd.length == 2) {
                                            switch (helpcmd[1]) {
                                                case GodCard.APOLLO:
                                                    System.out.println(GodCard.APOLLO_D);
                                                    break;
                                                case GodCard.ARTEMIS:
                                                    System.out.println(GodCard.ARTEMIS_D);
                                                    break;
                                                case GodCard.ATHENA:
                                                    System.out.println(GodCard.ATHENA_D);
                                                    break;
                                                case GodCard.ATLAS:
                                                    System.out.println(GodCard.ATLAS_D);
                                                    break;
                                                case GodCard.DEMETER:
                                                    System.out.println(GodCard.DEMETER_D);
                                                    break;
                                                case GodCard.HEPHAESTUS:
                                                    System.out.println(GodCard.HEPHAESTUS_D);
                                                    break;
                                                case GodCard.MINOTAUR:
                                                    System.out.println(GodCard.MINOTAUR_D);
                                                    break;
                                                case GodCard.PAN:
                                                    System.out.println(GodCard.PAN_D);
                                                    break;
                                                case GodCard.PROMETHEUS:
                                                    System.out.println(GodCard.PROMETHEUS_D);
                                                    break;
                                            }
                                            System.out.println("\n\n");
                                        }
                                    } else {
                                        String chosengod = cmdLine;

                                        chosengod = chosengod.trim();
                                        boolean bFound = false;
                                        for (int i = 0; i < gods.size(); i++) {
                                            if (gods.get(i).equals(chosengod)) {
                                                bFound = true;
                                                break;
                                            }
                                        }
                                        if (bFound == false) {
                                            break;
                                        }

                                        if (bFound == true) {
                                            // create an emulated command with proper syntax for
                                            // processing entered command section
                                            cmdLine = CHOSENGOD_COMMAND + " " + chosengod;
                                        }
                                    }
                                } else {
                                    System.out.println("Your god is: " + gods.get(0));
                                    cmdLine = CHOSENGOD_COMMAND + " " + gods.get(0);
                                }
                            }
                        }
                        break;
                        case cli_ChoosingFirstPlayer: {
                            if (players != null) {
                                clearScreen();
                                System.out.println("\nPlease choose the player that will be the first one to place its workers on the board and then the first to play the game between the listed players:");
                                for (int i = 0; i < players.size(); i++) {
                                    System.out.println(players.get(i));
                                }

                                WaitForUserInput();

                                String chosenplayer = cmdLine;
                                chosenplayer = chosenplayer.trim();

                                boolean bFound = false;

                                for (String player : players) {
                                    if (player.equals(cmdLine)) {
                                        bFound = true;
                                        break;
                                    }
                                }

                                if (bFound == false) {
                                    break;
                                } else {
                                    // create an emulated command with proper syntax for
                                    // processing entered command section
                                    cmdLine = CHOSENFIRSTPLAYER_COMMAND + " " + chosenplayer;
                                }

                            }
                        }
                        break;

                        case cli_ChoosingWorkersStartPosition: {
                            clearScreen();

                            setCellsToPrint();

                            printBoard();

                            gamestate = CLIGameState.cli_ManagePlacingFirstWorker;

                        }
                        break;

                        case cli_ManagePlacingFirstWorker: {
                            System.out.println("\nPlease place your first worker on the board.\n" + ITALIC + BOLD +
                                    "Remember:" + RESET + ITALIC + " You cannot put your workers in already occupied cells, which can be distinguished by" +
                                    "\ntheir different color corresponding to the color assigned to the player who owns those workers\n\n" + RESET +
                                    "Syntax to indicate the cells on which you want to place your worker: \"LetterNumber\"");

                            WaitForUserInput();

                            // process the user input regarding the 2 positions where the player wants to place its workers at the start of the game
                            String position = cmdLine.trim();

                            if (position.length() == 2) {

                                if (position.charAt(0) == 'A' || position.charAt(0) == 'B' || position.charAt(0) == 'C' || position.charAt(0) == 'D' || position.charAt(0) == 'E') {
                                    if (position.charAt(1) == '1' || position.charAt(1) == '2' || position.charAt(1) == '3' || position.charAt(1) == '4' || position.charAt(1) == '5') {

                                        int chosencellindex = (position.charAt(0) - 'A') * 5 + (position.charAt(1) - '1');

                                        //control that the position chosen was not occupied by another worker and is valid
                                        if(getNicknameOfCellNode(getCellNodeGivenTheID(chosencellindex)).isEmpty()) {
                                            chosenposition[0] = position;
                                            gamestate = CLIGameState.cli_ManagePlacingSecondWorker;
                                        }
                                    }
                                }
                            }
                        }
                        break;

                        case cli_ManagePlacingSecondWorker: {
                            System.out.println("\nPlease place your second worker on the board.\n" + ITALIC + BOLD +
                                    "Remember:" + RESET + ITALIC + " You cannot put your workers in already occupied cells, which can be distinguished by" +
                                    "\ntheir different color corresponding to the color assigned to the player who owns those workers\n\n" + RESET +
                                    "Syntax to indicate the cells on which you want to place your worker: \"LetterNumber\"");

                            WaitForUserInput();

                            // process the user input regarding the 2 positions where the player wants to place its workers at the start of the game
                            String position = cmdLine.trim();

                            if (position.length() == 2) {
                                if (position.charAt(0) == 'A' || position.charAt(0) == 'B' || position.charAt(0) == 'C' || position.charAt(0) == 'D' || position.charAt(0) == 'E') {
                                    if (position.charAt(1) == '1' || position.charAt(1) == '2' || position.charAt(1) == '3' || position.charAt(1) == '4' || position.charAt(1) == '5') {

                                        int chosencellindex;

                                        chosencellindex = (position.charAt(0) - 'A') * 5 + (position.charAt(1) - '1');

                                        //control that the position chosen was not occupied by another worker and is valid
                                        if(getNicknameOfCellNode(getCellNodeGivenTheID(chosencellindex)).isEmpty()) {
                                            chosenposition[1] = position;

                                            cmdLine = WORKERSPOSITION_COMMAND + " " + chosenposition[0] + " " + chosenposition[1];

                                            gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                        }
                                    }
                                }
                            }
                        }
                        break;

                        case cli_ChoosingWorker:  {
                            System.out.println("\nPlease select the cell occupied by the worker you want to play with.\n" + ITALIC + BOLD +
                                    "Remember:" + RESET + ITALIC + " You can only select workers of your own property, marked by your color" +
                                    "\n\n" + RESET +
                                    "Syntax to indicate the cell occupied by the worker you want to select: \"LetterNumber\"");

                            WaitForUserInput();

                            String position = cmdLine.trim();

                            if (position.length() == 2) {
                                if (position.charAt(0) == 'A' || position.charAt(0) == 'B' || position.charAt(0) == 'C' || position.charAt(0) == 'D' || position.charAt(0) == 'E') {
                                    if (position.charAt(1) == '1' || position.charAt(1) == '2' || position.charAt(1) == '3' || position.charAt(1) == '4' || position.charAt(1) == '5') {

                                        int chosenCellIndex;

                                        chosenCellIndex = (position.charAt(0) - 'A') * 5 + (position.charAt(1) - '1');

                                        //control that the position chosen is occupied by one of the players workers
                                        if(getNicknameOfCellNode(getCellNodeGivenTheID(chosenCellIndex)).equals(client.getNickname())) {

                                            cmdLine = CHOSENWORKER_COMMAND + " " + chosenCellIndex;

                                            gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                        }
                                    }
                                }
                            }
                        }
                        break;

                        case cli_WaitForSomethingToHappen: {
                            // in this state user is allowed to enter commands on commandline
                            // which will be processed on switch exit
                            try {
                                TimeUnit.MILLISECONDS.sleep(50);
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                        }
                        break;
                    }


                    // PROCESSING ENTERED COMMAND
                    if (!cmdLine.isEmpty()) {
                        String[] cmdlineParts = cmdLine.split(" ");

                        /* ************************** NOT GAME RELATED COMMANDS ********************** */
                        if (cmdlineParts[0].equals(DISCONNECT_COMMAND)) {
                            connstate = CLIConnectionState.cli_disconnecting;
                            client.Disconnect();
                        } else if (cmdlineParts[0].equals(BYE_COMMAND)) {
                            connstate = CLIConnectionState.cli_disconnecting;
                            client.Disconnect();
                            bRun = false;
                        } else if (cmdlineParts[0].equals(REGISTER_COMMAND)) {
                            if (cmdlineParts.length == 2) {
                                gamestate = CLIGameState.cli_Registering;
                                client.Register(cmdlineParts[1]);
                            } else
                                OnInvalidCommandSyntax(REGISTER_COMMAND);
                        } else if (cmdlineParts[0].equals(DEREGISTER_COMMAND)) {
                            gamestate = CLIGameState.cli_Deregistering;
                            client.Deregister();
                        } else if (cmdlineParts[0].equals(PLAY_COMMAND)) {
                            gamestate = CLIGameState.cli_ChoosingMatch;
                        }

                        /* ******************* GAME RELATED COMMANDS ******************** */

                        else if (cmdlineParts[0].equals(SEARCHMATCH_COMMAND)) {
                            if (cmdlineParts.length == 2) {
                                gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                client.SearchMatch(Integer.parseInt(cmdlineParts[1]));
                            }
                        } else if (cmdlineParts[0].equals(CHOSENGODS_COMMAND)) {
                            if (cmdlineParts.length == (requiredgods + 1)) {
                                gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                List<String> chosengods = new ArrayList<String>();
                                for (int i = 1; i < (requiredgods + 1); i++) {
                                    chosengods.add(cmdlineParts[i]);
                                }
                                client.ChosenGods(chosengods);
                                System.out.println(ITALIC + "Please wait while the other players choose their gods among the ones you picked..." + RESET);
                            }
                        } else if (cmdlineParts[0].equals(CHOSENGOD_COMMAND)) {
                            if (cmdlineParts.length == 2) {
                                gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                client.ChosenGod(cmdlineParts[1]);
                            }
                        } else if (cmdlineParts[0].equals(CHOSENFIRSTPLAYER_COMMAND)) {
                            if (cmdlineParts.length == 2) {
                                gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                client.ChosenFirstPlayer(cmdlineParts[1]);
                            }
                        } else if (cmdlineParts[0].equals(WORKERSPOSITION_COMMAND)) {
                            if (cmdlineParts.length == 3) {
                                gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                client.ChosenWorkersFirstPositions(cmdlineParts[1], cmdlineParts[2]);
                            }
                        } else if (cmdlineParts[0].equals(CHOSENWORKER_COMMAND)) {
                            if (cmdlineParts.length == 2) {
                                gamestate = CLIGameState.cli_WaitForSomethingToHappen;
                                client.ChosenWorker(cmdlineParts[1]);
                            }
                        }
                        cmdLine = "";
                    }
                }
                break;
            }
        }

        kbinput.bRun = false;

        System.out.println(QUIT_GAME_LABEL);
        System.exit(0);
    }

    /**
     * Method that tells the user why the command was invalid
     *
     * @param cmd command that determines which error will be displayed to the user
     */

    public void OnInvalidCommandSyntax(String cmd) {
        if (cmd.equals("connect"))
            System.out.println(RED + "\nMissing address from connect command.Syntax:\n connect ip:port where port is optional" + RESET);
        else if (cmd.equals("register"))
            System.out.println(RED + "\nMissing nickname from register command. Syntax:\n register nickname\n" + RESET);
    }

    /* ***********************************************************************************
     * Methods fired by the client's methods triggered in particular connection statuses *
     *************************************************************************************/

    /**
     * Method of the ClientObserver interface that is fired by the client after connection
     */

    @Override
    public void OnConnected() {
        abortUserInput = true;
        System.out.println(CONNECTED_LABEL);
        connstate = CLIConnectionState.cli_Connected;
    }

    /**
     * Method of the ClientObserver interface that is fired by the client if there was an error when trying to connect
     */

    @Override
    public void OnConnectionError() {
        abortUserInput = true;
        System.out.println(DISCONNECTED_LABEL);
        connstate = CLIConnectionState.cli_disconnected;
        gamestate = CLIGameState.cli_Deregistered;
    }

    /**
     * Method of the ClientObserver interface that is fired by the client if it has been disconnected from the server
     */

    @Override
    public void OnDisconnected() {
        System.out.println(DISCONNECTED_LABEL);
        abortUserInput = true;
        gamestate = CLIGameState.cli_Deregistered;
        connstate = CLIConnectionState.cli_disconnected;
    }

    /**
     * Method of the ClientObserver interface that is fired by the client after the user has registered
     */

    @Override
    public void OnRegistered() {
        abortUserInput = true;
        gamestate = CLIGameState.cli_Registered;
        System.out.println(BLUE_BOLD + "Welcome " + client.getNickname() + "\n");
    }

    /**
     * Method of the ClientObserver interface that is fired by the client if there was an error when trying to register
     */

    @Override
    public void OnRegistrationError(String error) {
        gamestate = CLIGameState.cli_Deregistered;
        System.out.println("Registration failed: " + error);
    }

    /**
     * Method of the ClientObserver interface that is fired by the client after the user has been deregistered
     */

    @Override
    public void OnDeregistered() {
        abortUserInput = true;
        gamestate = CLIGameState.cli_Deregistered;
    }

    /**
     * Method of the ClientObserver interface that is fired by the client when a user leaves the match
     *
     * @param nickname nicknames of the user that left the match
     */

    @Override
    public void OnLeftMatch(String nickname) {
        System.out.println(nickname + " has left the game.");
    }

    /**
     * Method of the ClientObserver interface that is fired by the client after connection
     */
    @Override
    public void OnChooseMatchType() {
        abortUserInput = true;
        gamestate = CLIGameState.cli_ChoosingMatch;
    }

    /**
     * Method of the ClientObserver interface that is fired by the client when entering a match
     */

    @Override
    public void OnEnteringMatch(List<String> players) {
        System.out.println("\nEntering match. Current players:");

        for (String player : players) {
            System.out.println(TRIANGLE + " " + player);
        }

        System.out.println(ITALIC + "Waiting for other players to join match" + RESET);
    }

    /**
     * Method of the ClientObserver interface that is fired by the client when it has entered a match
     */

    @Override
    public void OnEnteredMatch(List<String> players) {
        System.out.println("\n\nEntered match. Current players (with the assigned color that will be used to distinguish the workers' owner on the board):");

        for (int i = 0; i < players.size(); i++) {
            if (i == 0) {
                NicknameColorMap.put(players.get(i), RED);
                System.out.println(TRIANGLE + " " + RED + players.get(i) + RESET);
            } else if (i == 1) {
                NicknameColorMap.put(players.get(i), YELLOW);
                System.out.println(TRIANGLE + " " + YELLOW + players.get(i) + RESET);
            } else if (i == 2) {
                NicknameColorMap.put(players.get(i), GREEN);
                System.out.println(TRIANGLE + " " + GREEN + players.get(i) + RESET);
            }

        }
    }

    /**
     * Method of the ClientObserver interface that is fired by the client when choosing the list of gods to use in the match
     *
     * @param requiredgods number of gods that the client must choose
     * @param gods         gods' names chosen by the user
     */

    @Override
    public void OnChooseGods(int requiredgods, List<String> gods) {
        abortUserInput = true;
        gamestate = CLIGameState.cli_ChoosingGods;
        this.requiredgods = requiredgods;
        this.gods = gods;
    }

    /**
     * Method of the ClientObserver interface that is fired by the client when choosing the god to play with
     *
     * @param chosengods chosen gods to set as the gods managed by the cli that will communicate them to the user
     */

    @Override
    public void OnChooseGod(List<String> chosengods) {
        abortUserInput = true;
        gamestate = CLIGameState.cli_ChoosingGod;
        this.gods = chosengods;
    }

    /**
     * Method of the ClientObserver interface that is fired by the client when choosing the first player that
     * will place its workers and start playing
     *
     * @param players players in the match from which the selection must be done
     */

    @Override
    public void OnChooseFirstPlayer(List<String> players) {
        abortUserInput = true;
        gamestate = CLIGameState.cli_ChoosingFirstPlayer;
        this.players = players;
    }


    /**
     * Method of the ClientObserver interface that is fired by the client when placing the workers on the board for the first time
     *
     * @param board board in xml format that needs to be processed by the CLI when it prints the board
     */

    @Override
    public void OnChooseWorkerStartPosition(Node board) {
        abortUserInput = true;
        gamestate = CLIGameState.cli_ChoosingWorkersStartPosition;
        this.nodeboard = board;
    }

    @Override
    public void OnChooseWorker(Node board) {
        abortUserInput = true;
        gamestate = CLIGameState.cli_ChoosingWorker;
        this.nodeboard = board;
    }


    /**
     * Method of the ClientObserver interface that is fired by the client when there's a winner
     *
     * @param nickname nickname of the winner
     */

    @Override
    public void OnWinner(String nickname) {
        if (client.getNickname().equals(nickname))
            System.out.println(BLUE_BOLD + "\n\nYou have won the game. Congrats !!" + RESET);
        else
            System.out.println("\n\n" + BOLD + nickname + " has won the game." + RESET);

        System.out.println(BLACK + BLUE_BACKGROUND + AVAILABLE_COMMANDS_LABEL + RESET);
        System.out.println(TRIANGLE + PLAY_COMMAND_LABEL);
        System.out.println(TRIANGLE + DEREGISTER_COMMAND_LABEL);
        System.out.println(TRIANGLE + DISCONNECT_COMMAND_LABEL);
        System.out.println(TRIANGLE + BYE_COMMAND_LABEL);
    }

    /**
     * Method of the ClientObserver interface that is fired by the client when a user loses
     */

    @Override
    public void OnLoser() {
        System.out.println(BOLD + "\n\nYou have lost! Better luck next time." + RESET);
    }

    /* ******************************************************************************************************* *
     *                            UTILITY METHODS FOR MANAGING THE BOARD TO PRINT                              *
     * ******************************************************************************************************* */

    /**
     * Method that returns the node of the cell that has a certain id from the board in xml format (nodeboard of the class)
     * @param cellnodeid is of the cell node that is being found
     * @return the cell node found with the given id, null if there were no cells in the board given by the server
     */

    public Node getCellNodeGivenTheID(int cellnodeid) {
        Node cell;

        if (nodeboard.hasChildNodes()) {
            NodeList cells = nodeboard.getChildNodes();
            for (int i = 0; i < cells.getLength(); i++) {
                cell = cells.item(i);

                if (cell.getNodeName().equals("cell")) {
                    if (Integer.parseInt(cell.getAttributes().getNamedItem("id").getTextContent()) == cellnodeid) {
                        return cell;
                    }
                }
            }
        }

        return null;
    }

    /**
     * Method to get the id of a cell given its node
     * @param cellnode node in xml format from which to get the id
     * @return the id of the cell
     */

    public int getIdOfCellNode(Node cellnode) {
        return Integer.parseInt(cellnode.getAttributes().getNamedItem("id").getTextContent());
    }

    /**
     * Method to get the nickname of a cell given its node
     * @param cellnode node in xml format from which to get the nickname (it can be an empty string if the cell has no nikcname)
     * @return the nickname associated to the cell
     */

    public String getNicknameOfCellNode(Node cellnode) {

        return cellnode.getAttributes().getNamedItem("nickname").getTextContent();
    }

    /**
     * Method to get the level of a cell given its node
     * @param cellnode node in xml format from which to get the level
     * @return the level of the cell
     */

    public int getLevelOfCellNode(Node cellnode) {
        return Integer.parseInt(cellnode.getAttributes().getNamedItem("level").getTextContent());
    }

    /**
     * Method to get the dome of a cell given its node
     * @param cellnode node in xml format from which to get the dome
     * @return true fi the call has a dome, otherwise false
     */

    public boolean getDomeOfCellNode(Node cellnode) {
        return Boolean.parseBoolean(cellnode.getAttributes().getNamedItem("dome").getTextContent());
    }


    /**
     * Method that sets the cellsToPrint[] with the content that it gets from the nodeboard
     * (board in xml format that this CLI has received from the server)
     */

    public void setCellsToPrint() {

        Node cell;

        if (nodeboard.hasChildNodes()) {
            NodeList cells = nodeboard.getChildNodes();

            for (int i = 0; i < cells.getLength(); i++) {
                cell = cells.item(i);

                if (cell.getNodeName().equals("cell")) {
                    int id = getIdOfCellNode(cell);
                    int level = getLevelOfCellNode(cell);
                    boolean dome = getDomeOfCellNode(cell);

                    cellsToPrint[id] = "";

                    boolean bNick = false; //used to determine if the cell is occupied by a worker

                    if (!cell.getAttributes().getNamedItem("nickname").getTextContent().equals("")) {
                        String nickname = getNicknameOfCellNode(cell);
                        cellsToPrint[id] += NicknameColorMap.get(nickname);
                        bNick = true;
                    }

                    if (dome) {
                        cellsToPrint[id] += "C";
                        break;
                    } else {
                        if (level == 0) {
                            cellsToPrint[id] += "0";
                        } else if (level == 1) {
                            cellsToPrint[id] += "1";
                        } else if (level == 2) {
                            cellsToPrint[id] += "2";
                        } else if (level == 3) {
                            cellsToPrint[id] += "3";
                        }
                    }

                    if (bNick) {
                        cellsToPrint[id] += RESET;
                    }
                }
            }
        }
    }

    public void printBoard() {

        //The BOARD is going to be printed like this
        //       ___________________
        //    E | 0 | 2 | 0 | 3 | 0 |
        //      |---+---+---+---+---|
        //    D | 0 | C | 0 | 3 | 0 |       Legend
        //      |---+---+---+---+---|       0/1/2/3 = level currently built on the cell
        //    C | C | 2 | 2 | 0 | 1 |       C = the cell has a dome
        //      |---+---+---+---+---|       colored cell = the cell is occupied by a worker of the player that has been assigned with that color
        //    B | 0 | 1 | 2 | 3 | 0 |
        //      |---+---+---+---+---|
        //    A | 1 | 1 | 0 | 3 | 0 |
        //       ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
        //        1   2   3   4   5

        System.out.println("\n");
        System.out.println("        ___________________");
        System.out.println("    E  | " + cellsToPrint[20] + " | " + cellsToPrint[21] + " | " + cellsToPrint[22] + " | " + cellsToPrint[23] + " | " + cellsToPrint[24] + " |");
        System.out.println("       |---+---+---+---+---|");
        System.out.println("    D  | " + cellsToPrint[15] + " | " + cellsToPrint[16] + " | " + cellsToPrint[17] + " | " + cellsToPrint[18] + " | " + cellsToPrint[19] + " |       Legend");
        System.out.println("       |---+---+---+---+---|       0/1/2/3 = level currently built on the cell");
        System.out.println("    C  | " + cellsToPrint[10] + " | " + cellsToPrint[11] + " | " + cellsToPrint[12] + " | " + cellsToPrint[13] + " | " + cellsToPrint[14] + " |       C = the cell has a dome");
        System.out.println("       |---+---+---+---+---|       colored cell = the cell is occupied by a worker of the player that has been assigned with that color");
        System.out.println("    B  | " + cellsToPrint[5] + " | " + cellsToPrint[6] + " | " + cellsToPrint[7] + " | " + cellsToPrint[8] + " | " + cellsToPrint[9] + " |");
        System.out.println("       |---+---+---+---+---|");
        System.out.println("    A  | " + cellsToPrint[0] + " | " + cellsToPrint[1] + " | " + cellsToPrint[2] + " | " + cellsToPrint[3] + " | " + cellsToPrint[4] + " |");
        System.out.println("        ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾");
        System.out.println("         1   2   3   4   5");


    }



}